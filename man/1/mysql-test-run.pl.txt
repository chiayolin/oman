MYSQL-TEST-RUN()					      MYSQL-TEST-RUN()



NAME
       mysql-test-run.pl - run MySQL test suite

SYNOPSIS
       mysql-test-run.pl [options]

DESCRIPTION
       The mysql-test-run.pl Perl script is the main application used to run
       the MySQL test suite. It invokes mysqltest to run individual test
       cases.

       Invoke mysql-test-run.pl in the mysql-test directory like this:

	   shell> mysql-test-run.pl [options] [test_name] ...

       Each test_name argument names a test case. The test case file that
       corresponds to the test name is t/test_name.test.

       For each test_name argument, mysql-test-run.pl runs the named test
       case. With no test_name arguments, mysql-test-run.pl runs all .test
       files in the t subdirectory.

       If no suffix is given for the test name, a suffix of .test is assumed.
       Any leading path name is ignored. These commands are equivalent:

	   shell> mysql-test-run.pl mytest
	   shell> mysql-test-run.pl mytest.test
	   shell> mysql-test-run.pl t/mytest.test

       A suite name can be given as part of the test name. That is, the syntax
       for naming a test is:

	   [suite_name.]test_name[.suffix]

       If a suite name is given, mysql-test-run.pl looks in that suite for the
       test. The test file corresponding to a test named suite_name.test_name
       is found in suite/suite_name/t/test_name.test. There is also an
       implicit suite name main for the tests in the top t directory. With no
       suite name, mysql-test-run.pl looks in the default list of suites for a
       match and runs the test in any suites where it finds the test. Suppose
       that the default suite list is main, binlog, rpl, and that a test
       mytest.test exists in the main and rpl suites. With an argument of
       mytest or mytest.test, mysql-test-run.pl will run mytest.test from the
       main and rpl suites.

       To run a family of test cases for which the names share a common
       prefix, use the --do-test=prefix option. For example, --do-test=rpl
       runs the replication tests (test cases that have names beginning with
       rpl).  --skip-test has the opposite effect of skipping test cases for
       which the names share a common prefix.

       The argument for the --do-test and --skip-test options also allows more
       flexible specification of which tests to perform or skip. If the
       argument contains a pattern metacharacter other than a lone period, it
       is interpreted as a Perl regular expression and applies to test names
       that match the pattern. If the argument contains a lone period or does
       not contain any pattern metacharacters, it is interpreted the same way
       as previously and matches test names that begin with the argument
       value. For example, --do-test=testa matches tests that begin with
       testa, --do-test=main.testa matches tests in the main test suite that
       begin with testa, and --do-test=main.*testa matches test names that
       contain main followed by testa with anything in between. In the latter
       case, the pattern match is not anchored to the beginning of the test
       name, so it also matches names such as xmainytesta.

       From MySQL 5.7 it is possible to put a list of test names in a file and
       have mysql-test-run.pl run those tests, using the option
       --do-test-list=file. The tests should be listed one per line in the
       file, using the fully qualified name suite.test. A space may be used in
       place of the period. A line beginning with # indicates a comment and is
       ignored.

       To perform setup prior to running tests, mysql-test-run.pl needs to
       invoke mysqld with the --bootstrap and --skip-grant-tables options. If
       MySQL was built with the compiler flag -DDISABLE_GRANT_OPTIONS, then
       --bootstrap, --skip-grant-tables, and --init-file will be disabled. To
       handle this, set the MYSQLD_BOOTSTRAP environment variable to the full
       path name of a server that has all options enabled.  mysql-test-run.pl
       will use that server to perform setup; it is not used to run the tests.

       The init_file test will fail if --init-file is disabled. This is an
       expected failure in this case.

       To run mysql-test-run.pl on Windows, you'll need either Cygwin or
       ActiveState Perl to run it. You may also need to install the modules
       required by the script. To run the test script, change location into
       the mysql-test directory, set the MTR_VS_CONFIG environment variable to
       the configuration you selected earlier (or use the --vs-config option),
       and invoke mysql-test-run.pl. For example (using Cygwin and the bash
       shell):

	   shell> cd mysql-test
	   shell> export MTR_VS_CONFIG=debug
	   shell> ./mysqltest-run.pl --force --timer
	   shell> ./mysqltest-run.pl --force --timer --ps-protocol

       mysql-test-run.pl uses several environment variables. Some of them are
       listed in the following table. Some of these are set from the outside
       and used by mysql-test-run.pl, others are set by mysql-test-run.pl
       instead, and may be referred to in tests.

       +----------------------+----------------------------------------------+
       |Variable	      | Description				     |
       +----------------------+----------------------------------------------+
       |MTR_MEM 	      | If set to anything, will		     |
       |		      | run tests with files in 		     |
       |		      | "memory" using tmpfs or 		     |
       |		      | 		ramdisk.		     |
       |		      | Not available on Windows.		     |
       |		      | Same as 				     |
       |		      | 		--mem			     |
       |		      | option					     |
       +----------------------+----------------------------------------------+
       |MTR_PARALLEL	      | If set, defines number of		     |
       |		      | parallel threads executing		     |
       |		      | tests. Same as				     |
       |		      | 		--parallel		     |
       |		      | option					     |
       +----------------------+----------------------------------------------+
       |MTR_BUILD_THREAD      | If set, defines which port		     |
       |		      | number range is used for		     |
       |		      | the server				     |
       +----------------------+----------------------------------------------+
       |MTR_PORT_BASE	      | If set, defines which port		     |
       |		      | number range is used for		     |
       |		      | the server				     |
       +----------------------+----------------------------------------------+
       |MTR_NAME_TIMEOUT      | Setting of a timeout in 		     |
       |		      | minutes or seconds,			     |
       |		      | corresponding to command		     |
       |		      | 		line			     |
       |		      | option					     |
       |		      | 		--name-timeout. 	     |
       |		      | 		Avaliable		     |
       |		      | timeout names are			     |
       |		      | TESTCASE,				     |
       |		      | 		SUITE			     |
       |		      | (both in minutes) and			     |
       |		      | 		START,			     |
       |		      | SHUTDOWN				     |
       |		      | 		(both in		     |
       |		      | seconds).				     |
       +----------------------+----------------------------------------------+
       |MYSQL_CONFIG_EDITOR   | Path name to				     |
       |		      | mysql_config_editor binary.		     |
       |		      | Supported as				     |
       |		      | 		of MySQL 5.6.6. 	     |
       +----------------------+----------------------------------------------+
       |MYSQL_TEST	      | Path name to mysqltest binary		     |
       +----------------------+----------------------------------------------+
       |MYSQL_TEST_LOGIN_FILE | Path name to login file used by 	     |
       |		      | mysql_config_editor.			     |
       |		      | 		If not set, the 	     |
       |		      | default is				     |
       |		      | 		$HOME/.mylogin.cnf,	     |
       |		      | or					     |
       |		      | 		%APPDATA%\MySQL\.mylogin.cnf |
       |		      | on					     |
       |		      | 		Windows.		     |
       |		      | Supported as of MySQL 5.6.6.		     |
       +----------------------+----------------------------------------------+
       |MYSQLD_BOOTSTRAP      | Full path name to mysqld that has all	     |
       |		      | options enabled 			     |
       +----------------------+----------------------------------------------+
       |MYSQLD_BOOTSTRAP_CMD  | Full command line used for initial database  |
       |		      | setup for this test batch		     |
       +----------------------+----------------------------------------------+
       |MYSQLD		      | Full path to server executable used in	     |
       |		      | tests. Supported as of MySQL		     |
       |		      | 		5.5.17. 		     |
       +----------------------+----------------------------------------------+
       |MYSQLD_CMD	      | Command line for starting server as used in  |
       |		      | tests, with the minimum set		     |
       |		      | 		of required arguments.	     |
       |		      | Supported as of MySQL 5.5.17.		     |
       +----------------------+----------------------------------------------+
       |MYSQLTEST_VARDIR      | Path name to the var directory that is used  |
       |		      | for					     |
       |		      | 		logs, temporary files, and   |
       |		      | so forth				     |
       +----------------------+----------------------------------------------+
       |MYSQL_TEST_DIR	      | Full path to the mysql-test directory where  |
       |		      | tests					     |
       |		      | 		are being run from	     |
       +----------------------+----------------------------------------------+
       |MYSQL_TMP_DIR	      | Path to temp directory used for temporary    |
       |		      | files during tests			     |
       +----------------------+----------------------------------------------+

       The variable MTR_PORT_BASE is a more logical replacement for the
       original variable MTR_BUILD_THREAD. It gives the actual port number
       directly (will be rounded down to a multiple of 10). If you use
       MTR_BUILD_THREAD, the port number is found by multiplying this by 10
       and adding 10000.

       Tests sometimes rely on certain environment variables being defined.
       For example, certain tests assume that MYSQL_TEST is defined so that
       mysqltest can invoke itself with exec $MYSQL_TEST.

       Other tests may refer to the last three variables listed in the
       preceding table, to locate files to read or write. For example, tests
       that need to create files will typically put them in
       $MYSQL_TMP_DIR/file_name.

       The variable $MYSQLD_CMD will include any server options added with the
       --mysqld option to mysql-test-run.pl, but will not include server
       options added specifically for the currently running test.

       mysql-test-run.pl supports the options in the following list. An
       argument of -- tells mysql-test-run.pl not to process any following
       arguments as options.

       o   --help, -h

	   Display a help message and exit.

       o   --big-test

	   Allow tests marked as "big" to run. Tests can be thus marked by
	   including the line --source include/big_test.inc, and they will
	   only be run if this option is given, or if the environment variable
	   BIG_TEST is set to 1.

	   This is typically done for tests that take very long to run, or
	   that use very much resources, so that they are not suitable for
	   running as part of a normal test suite run.

       o   --boot-dbx

	   Run the mysqld server used for bootstrapping the database through
	   the dbx debugger. This option is available from MySQL 5.5.17.

       o   --boot-ddd

	   Run the mysqld server used for bootstrapping the database through
	   the ddd debugger. This option is available from MySQL 5.5.17.

       o   --boot-gdb

	   Run the mysqld server used for bootstrapping the database through
	   the gdb debugger. This option is available from MySQL 5.5.17.

       o   --build-thread=number

	   Specify a number to calculate port numbers from. The formula is 10
	   * build_thread + 10000. Instead of a number, it can be set to auto,
	   which is also the default value, in which case mysql-test-run.pl
	   will allocate a number unique to this host.

	   The value (number or auto) can also be set with the
	   MTR_BUILD_THREAD environment variable.

	   This option is kept for backward compatibility. The more logical
	   --port-base is recommended instead.

       o   --callgrind

	   Instructs valgrind to use callgrind.

       o   --check-testcases

	   Check test cases for side effects. This is done by checking system
	   state before and after each test case; if there is any difference,
	   a warning to that effect will be written, but the test case will
	   not be marked as failed because of it. This check is enabled by
	   default.

       o   --clean-vardir

	   Clean up the var directory with logs and test results etc. after
	   the test run, but only if there were no test failures. This option
	   only has effect if also running with option --mem. The intent is to
	   alleviate the problem of using up memory for test results, in cases
	   where many different test runs are being done on the same host.

       o   --client-bindir=path

	   The path to the directory where client binaries are located.

       o   --client-dbx

	   Start mysqltest in the dbx debugger. Support for dbx is available
	   from MySQL 5.5.12.

       o   --client-ddd

	   Start mysqltest in the ddd debugger.

       o   --client-debugger=debugger

	   Start mysqltest in the named debugger.

       o   --client-gdb

	   Start mysqltest in the gdb debugger.

       o   --client-libdir=path

	   The path to the directory where client libraries are located.

       o   --combination=value

	   Extra option to pass to mysqld. The value should consist of a
	   single mysqld option including dashes. This option is similar to
	   --mysqld but has a different effect.  mysql-test-run.pl executes
	   multiple test runs, using the options for each instance of
	   --combination in successive runs. If --combination is given only
	   once, it has no effect. For test runs specific to a given test
	   suite, an alternative to the use of --combination is to create a
	   combinations file in the suite directory. The file should contain a
	   section of options for each test run. See Section 4.9, "Passing
	   Options from mysql-test-run.pl to mysqld or mysqltest".

       o   --comment=str

	   Write str to the output within lines filled with #, as a form of
	   banner.

       o   --compress

	   Compress all information sent between the client and the server if
	   both support compression.

       o   --cursor-protocol

	   Pass the --cursor-protocol option to mysqltest (implies
	   --ps-protocol).

       o   --dbx

	   Start mysqld in the dbx debugger. Support for dbx is available from
	   MySQL 5.5.12.

       o   --ddd

	   Start mysqld in the ddd debugger.

       o   --debug

	   Dump trace output for all clients and servers.

       o   --debugger=debugger

	   Start mysqld using the named debugger.

       o   --debug-common

	   This option works similar to --debug but turns on debug only for
	   the debug macro keywords query, info, error, enter, exit which are
	   considered the most commonly used.

       o   --debug-server

	   Runs mysqld.debug (if available) instead of mysqld as server. If it
	   does find mysqld.debug, it will search for plugin libraries in a
	   subdirectory debug under the directory where it's normally located.
	   This option does not turn on trace output and is independent of the
	   debug option.

       o   --debug-sync-timeout=N

	   Controls whether the Debug Sync facility for testing and debugging
	   is enabled. The option value is a timeout in seconds. The default
	   value is 300. A value of 0 disables Debug Sync. The value of this
	   option also becomes the default timeout for individual
	   synchronization points.

	   mysql-test-run.pl passes --loose-debug-sync-timeout=N to mysqld.
	   The --loose prefix is used so that mysqld does not fail if Debug
	   Sync is not compiled in.

	   For information about using the Debug Sync facility for testing,
	   see Section 4.14, "Thread Synchronization in Test Cases".

       o   --default-myisam

	   Use MyISAM as default engine for all except InnoDB-specific tests.
	   This option is on by default in MySQL 5.5 and 5.6 but it off by
	   default from MySQL 5.7. See also --nodefault-myisam.

       o   --defaults-file=file_name

	   Use the named file as fixed config file template for all tests.

       o   --defaults_extra_file=file_name

	   Add setting from the named file to all generated configs.

       o   --do-test=prefix

	   Run all test cases having a name that begins with the given prefix
	   value. This option provides a convenient way to run a family of
	   similarly named tests.

	   The argument for the --do-test option also allows more flexible
	   specification of which tests to perform. If the argument contains a
	   pattern metacharacter other than a lone period, it is interpreted
	   as a Perl regular expression and applies to test names that match
	   the pattern. If the argument contains a lone period or does not
	   contain any pattern metacharacters, it is interpreted the same way
	   as previously and matches test names that begin with the argument
	   value. For example, --do-test=testa matches tests that begin with
	   testa, --do-test=main.testa matches tests in the main test suite
	   that begin with testa, and --do-test=main.*testa matches test names
	   that contain main followed by testa with anything in between. In
	   the latter case, the pattern match is not anchored to the beginning
	   of the test name, so it also matches names such as xmainytestz.

       o   --do-testlist=file

	   Run all tests listed in the file file. In this file, tests should
	   be listed one per line in the form suite.test or alternatively,
	   with a space instead of the period. A line beginning with # will be
	   ignored and can be used for comments.

	   The --do-test-list option is available from MySQL 5.7.

       o   --embedded-server

	   Use a version of mysqltest built with the embedded server.

       o   --enable-disabled

	   Ignore any disabled.def file, and run also tests marked as
	   disbaled. Success or failure of those tests will be reported the
	   same way as other tests.

       o   --experimental=file_name

	   Specify a file that contains a list of test cases that should be
	   displayed with the [ exp-fail ] code rather than [ fail ] if they
	   fail.

	   For an example of a file that might be specified using this option,
	   see mysql-test/collections/default.experimental.

	   It is also possible to supply more than one --experimental, test
	   cases listed in all the files will be treated as experimental.

       o   --explain-protocol,

	   Run EXPLAIN EXTENDED on all SELECT, INSERT, REPLACE, UPDATE and
	   DELETE queries.

       o   --extern option=value

	   Use an already running server. The option/value pair is what is
	   needed by the mysql client to connect to the server. Each --extern
	   can only take one option/value pair as argument, so it you need
	   more you need to repeat --extern for each of them. Example:

		     ./mysql-test-run.pl --extern socket=var/tmp/mysqld.1.sock alias

	   Note: If a test case has an .opt file that requires the server to
	   be restarted with specific options, the file will not be used. The
	   test case likely will fail as a result.

       o   --fast

	   Do not perform controlled shutdown when servers need to be
	   restarted or at the end of the test run. This is equivalent to
	   using --shutdown-timeout=0.

       o   --force

	   Normally, mysql-test-run.pl exits if a test case fails.  --force
	   causes execution to continue regardless of test case failure.

       o   --force-restart

	   Always restart the server(s) between each tast case, whether it's
	   needed or not. Will also restart between repeated runs of the same
	   test case. This may be useful e.g. when looking for the source of a
	   memory leak, as there will only have been one test run before the
	   server exits.

       o   --gcov

	   Run tests with the gcov test coverage tool.

       o   --gdb

	   Start mysqld in the gdb debugger.

       o   --gprof

	   Run tests with the gprof profiling tool.

       o   --include-ndbcluster, --include-ndb

	   Run also tests that need Cluster.

       o   --json-explain-protocol,

	   Run EXPLAIN FORMAT=JSON on all SELECT, INSERT, REPLACE, UPDATE and
	   DELETE queries. The json-explain-protocol option is available from
	   MySQL 5.6.

       o   --manual-dbx

	   Use a server that has already been started by the user in the dbx
	   debugger. Support for dbx is available from MySQL 5.5.12.

       o   --manual-ddd

	   Use a server that has already been started by the user in the ddd
	   debugger.

       o   --manual-debug

	   Use a server that has already been started by the user in a
	   debugger.

       o   --manual-gdb

	   Use a server that has already been started by the user in the gdb
	   debugger.

       o   --mark-progress

	   Marks progress with timing (in milliseconds) and line number in
	   var/log/testname.progress.

       o   --max-connections=num

	   The maximum number of simultaneous server connections that may be
	   used per test. If not set, the maximum is 128. Minimum allowed
	   limit is 8, maximum is 5120. Corresponds to the same option for
	   mysqltest.

       o   --max-save-core=N

	   Limit the number of core files saved, to avoid filling up disks in
	   case of a frequently crashing server. Defaults to 5, set to 0 for
	   no limit. May also be set with the environment variable
	   MTR_MAX_SAVE_CORE

       o   --max-save-datadir=N

	   Limit the number of data directories saved after failed tests, to
	   avoid filling up disks in case of frequent failures. Defaults to
	   20, set to 0 for no limit. May also be set with the environment
	   variable MTR_MAX_SAVE_DATADIR

       o   --max-test-fail=N

	   Stop execution after the specified number of tests have failed, to
	   avoid using up resources (and time) in case of massive failures.
	   retries are noe counted, nor are failures of tests marked
	   experimental. Defaults to 10, set to 0 for no limit. May also be
	   set with the environment variable MTR_MAX_TEST_FAIL

       o   --mem

	   This option is not supported on Windows.

	   Run the test suite in memory, using tmpfs or ramdisk. This can
	   decrease test times significantly, in particular if you would
	   otherwise be running over a remote file system.  mysql-test-run.pl
	   attempts to find a suitable location using a built-in list of
	   standard locations for tmpfs and puts the var directory there. This
	   option also affects placement of temporary files, which are created
	   in var/tmp.

	   The default list includes /dev/shm. You can also enable this option
	   by setting the environment variable MTR_MEM[=dir_name]. If dir_name
	   is given, it is added to the beginning of the list of locations to
	   search, so it takes precedence over any built-in locations.

	   Once you have run tests with --mem within a mysql-testdirectory, a
	   soflink var will have been set up to the temporary directory, and
	   this will be re-used the next time, until the soflink is deleted.
	   Thus, you do not have to repeat the --mem option next time.

       o   --mysqld=value

	   Extra option to pass to mysqld. Only one option may be specified in
	   value; to specify more than one, use additional --mysqld options.
	   See Section 4.9, "Passing Options from mysql-test-run.pl to mysqld
	   or mysqltest".

       o   --mysqld-env=variable=value

	   Sets (or changes) an environment variable before starting mysqld.
	   Varibles set in the environment from which you run
	   mysql-test-run.pl will normally also be propagated to mysqld, but
	   there may be cases where you want a setting just for a single run,
	   or you may not want the setting to affect other programs. You may
	   use additional --mysqld-env options to set more than one variable.

       o   --ndb-connectstring=str

	   Pass --ndb-connectstring=str to the master MySQL server. This
	   option also prevents mysql-test-run.pl from starting a cluster. It
	   is assumed that there is already a cluster running to which the
	   server can connect with the given connectstring.

       o   --nocheck-testcases

	   Disable the check for test case side effects; see --check-testcases
	   for a description.

       o   --nodefault-myisam

	   For MySQL 5.5 or 5.6, do not override the build-in default engine
	   to use MyISAM instead for non-InnoDB tests. Since the existing
	   collection of tests were originally adapted for MyISAM as default,
	   many tests will fail when this option is used, because the test
	   behaves differently or produces different output when the engine
	   switches to InnoDB.

	   From MySQL 5.7, the default engine for tests has been changed to
	   InnoDB and this option will have no effect.

       o   --noreorder

	   Do not reorder tests to reduce number of restarts, but run them in
	   exactly the order given. If a whole suite is to be run, the tests
	   are run in alphabetic order, though similiar combinations will be
	   grouped together. If more than one suite is listed, the tests are
	   run one suite at a time, in the order listed.

       o   --notimer

	   Cause mysqltest not to generate a timing file. The effect of this
	   is that the report from each test case does not include the timing
	   in milliseconds as it normally does.

       o   --nounit-tests

	   Do not run unit tests, overriding default behaviour or setting of
	   the MTR_UNIT_TESTS variable.

	   Running of unit tests was enabled from MySQL 5.5.11.

       o   --nowarnings

	   Do not look for and report errors and warning in the server logs.

       o   --parallel={N|auto}

	   Run tests using N parallel threads. By default, 1 thread is used.
	   Use --parallel=auto for auto-setting of N.

       o   --port-base=P

	   Specify base of port numbers to be used; a block of 10 will be
	   allocated.  P should be divisible by 10; if it is not, it will be
	   rounded down. If running with more than one parallel test thread,
	   thread 2 will use the next block of 10 and so on.

	   If the port number is given as auto, which is also the default,
	   mysql-test-run.plwill allocate a number unique to this host. The
	   value may also be given with the environment variable
	   MTR_PORT_BASE.

	   --port-base was added in MySQL 5.1.45 as a more logical alternative
	   to --build-thread. If both are used, --port-base takes precedence.

       o   --print-testcases

	   Do not run any tests, but print details about all tests, in the
	   order they would have been run.

       o   --ps-protocol

	   Pass the --ps-protocol option to mysqltest.

       o   --record

	   Pass the --record option to mysqltest. This option requires a
	   specific test case to be named on the command line.

       o   --reorder

	   Reorder tests to minimize the number of server restarts needed.
	   This is the default behavior. There is no guarantee that a
	   particular set of tests will always end up in the same order.

       o   --repeat=N

	   Run each test N number of times.

       o   --report-features

	   Display the output of SHOW ENGINES and SHOW VARIABLES. This can be
	   used to verify that binaries are built with all required features.

       o   --report-times

	   At the end of the test run, write a summary of how much time was
	   spent in various phases of execution. If you run with --parallel,
	   the total will exceed the wall clock time passed, since it will be
	   summed over all threads.

	   The times reported should only be treated as approximations, and
	   the exact points where the time is taken may also change between
	   releases. If the test run is aborted, including if a test fails and
	   --force is not in use, the time report will not be produced.

	   The --report-times is available from MySQL 5.5.

       o   --retry=N

	   If a test fails, it is retried up to a maximum of N runs, but will
	   terminate after 2 failures. Default is 3, set to 1 or 0 for no
	   retries. This option has no effect unless --force is also used;
	   without it, test execution will terminate after the first failure.

	   The --retry and --retry-failure options do not affect how many
	   times a test repeated with --repeat may fail in total, as each
	   repetition is considered a new test case, which may in turn be
	   retried if it fails.

       o   --retry-failure=N

	   Allow a failed and retried test to fail more than the default 2
	   times before giving it up. Setting it to 0 or 1 effectively turns
	   off retries

       o   --shutdown-timeout=SECONDS

	   Max number of seconds to wait for servers to do controlled shutdown
	   before killing them. Default is 10.

       o   --skip-combinations

	   Do not apply combinations; ignore combinations file or option.

       o   --skip-ndbcluster, --skip-ndb

	   Do not start NDB Cluster; skip Cluster test cases. This option only
	   has effect if you do have NDB, if not it will have no effect as it
	   cannot run those tests anyway.

       o   --skip-ndbcluster-slave, --skip-ndb-slave

	   Do not start an NDB Cluster slave.

       o   --skip-rpl

	   Skip replication test cases.

       o   --skip-ssl

	   Do not start mysqld with support for SSL connections.

       o   --skip-test=regex

	   Specify a regular expression to be applied to test case names.
	   Cases with names that match the expression are skipped. tests to
	   skip.

	   The argument for the --skip-test option allows more flexible
	   specification of which tests to skip. If the argument contains a
	   pattern metacharacter other than a lone period, it is interpreted
	   as a Perl regular expression and applies to test names that match
	   the pattern. See the description of the --do-test option for
	   details.

       o   --skip-test-list=file

	   Specify a file listing tests that should be skipped (disabled).

	   The file has the same format as the disabled.def file listing
	   disabled tests. With this option, disabling can be done on a case
	   by case basis. The --skip-test-list option is supported from MySQL
	   5.5.

       o   --skip-*

	   --skip-* options not otherwise recognized by mysql-test-run.pl are
	   passed to the master server.

       o   --sleep=N

	   Pass --sleep=N to mysqltest.

       o   --sp-protocol

	   Pass the --sp-protocol option to mysqltest.

       o   --ssl

	   If mysql-test-run.pl is started with the --ssl option, it sets up a
	   secure connection for all test cases. In this case, if mysqld does
	   not support SSL, mysql-test-run.pl exits with an error message:
	   Couldn't find support for SSL

       o   --start

	   Initialize and start servers with the startup settings for the
	   specified test case. You can use this option to start a server to
	   which you can connect later. For example, after building a source
	   distribution you can start a server and connect to it with the
	   mysql client like this:

	       shell> cd mysql-test
	       shell> ./mysql-test-run.pl --start alias &
	       shell> ../mysql -S ./var/tmp/master.sock -h localhost -u root

	   If no tests are named on the command line, the server(s) will be
	   started with settings for the first test that would have been run
	   without the --start option.

	   mysql-test-run.pl will stop once the server has been started, but
	   will terminate if the server dies. If killed, it will also shut
	   down the server.

       o   --start-and-exit

	   This is similar to --start, but mysql-test-run.pl terminates once
	   the server has been started, leaving just the server process
	   running.

       o   --start-dirty

	   This is similar to --start, but will skip the database
	   initialization phase and assume that database files are already
	   available. Usually this means you must have run another test first.

       o   --start-from=test_name

	   mysql-test-run.pl sorts the list of names of the test cases to be
	   run, and then begins with test_name.

       o   --strace-client

	   Create strace output for mysqltest. Will produce default strace
	   output as mysqltest.strace. Note that this will be overwritten for
	   each new test case, so it's most useful for running only one test.

	   The strace-client option is functional from MySQL 5.5.20, and only
	   supported on Linux. The option was available in earlier versions
	   too, but was not working properly.

       o   --strace-server

	   Create strace output for the server. Will produce default strace
	   output as mysqld.1.strace. Note that this will be overwritten each
	   time the server is restarted, so it's most useful for running a
	   single test, or if you want trace from the first test that fails.

	   The strace-server option is available from MySQL 5.5.20, on Linux
	   only.

       o   --stress=stress options

	   Start a server, but instead of running a test, run
	   mysql-stress-test.pl with the supplied arguments. Arguments needed
	   to communicate with the server will be automatically provided, the
	   rest should be given as arguments to this option. Command line
	   options for mysql-stress-test.pl should be separeted by a comma.

	   The stress option was added in MySQL 5.5.17, it is not a direct
	   replacement for the option of the same name that exists in version
	   1 of mysql-test-run.pl.

       o   --suite=suite_name

	   Run the named test suite. The default name is main (the regular
	   test suite located in the mysql-test directory).

       o   --suite-timeout=minutes

	   Specify the maximum test suite runtime.

       o   --testcase-timeout

	   Specify the maximum test case runtime.

       o   --timediff

	   Adds to each test report for a test case, the total time in sconds
	   and milliseconds passed since the preceding test ended. This option
	   can only be used together with --timestamp, and has no effect
	   without it.

       o   --timer

	   Cause mysqltest to generate a timing file. The default file is
	   named ./var/log/timer.

       o   --timestamp

	   Prints a timestamp before the test case name in each test report
	   line, showing when the test ended.

       o   --tmpdir=path

	   The directory where temporary file are stored. The default location
	   is ./var/tmp. The environment variable MYSQL_TMP_DIR will be set to
	   the path for this directory, whether it has the default value or
	   has been set explicitly. This may be referred to in tests.

       o   --unit-tests

	   Force running of unit tests, overriding default behaviour or
	   setting of the MTR_UNIT_TESTS variable.

	   Running of unit tests was enabled from MySQL 5.5.11.

       o   --unit-tests-report

	   Extend the unit test run by also outputting the log from the test
	   run, independently of whether it succeeded or not. This option
	   implies --unit-tests so it is not necessary to specify both. The
	   --unit-tests-report option is available in MySQL 5.5 from version
	   5.5.44, in 5.6 from version 5.6.25 as well as in MySQL 5.7.

       o   --user=user_name

	   The MySQL user name to use when connecting to the server.

       o   --user-args

	   Drops all non-essential command line arguments to the mysqld
	   server, except those supplied with --mysqld arguemnts, if any. Only
	   works in combination with --start, --start-and-exit or
	   --start-dirty, and only if no test name is given.

       o   --valgrind

	   Run mysqltest and mysqld with valgrind. This and the following
	   --valgrind options require that the executables have been build
	   with valgrind support.

	   When the server is run with valgrind, an extra pass over the server
	   log file(s) will be performed after all tests are run, and any
	   report with problems that have been reported at server shutdown
	   will be extracted and printed. The most common warnings are memory
	   leaks. With each report will also be listed all tests that were run
	   since previous server restart; one of these is likely to have
	   caused the problem.

	   From MySQL 5.5.13, a final "pseudo" test named valgrind_report is
	   added to the list of tests when the server is run in valgrind. This
	   test is reported as failed if any such shutdown warnings were
	   produced by valgrind. Pass or failure of this test is also added to
	   the total test count reported.

       o   --valgrind-mysqld

	   Run the mysqld server with valgrind.

       o   --valgrind-mysqltest

	   Run mysqltest with valgrind.

       o   --valgrind-option=str

	   Extra options to pass to valgrind.

       o   --valgrind-path=path

	   Specify the path name to the valgrind executable.

       o   --vardir=path

	   Specify the path where files generated during the test run are
	   stored. The default location is ./var. The environment variable
	   MYSQLTEST_VARDIR will be set to the path for this directory,
	   whether it has the default value or has been set explicitly. This
	   may be referred to in tests.

       o   --verbose

	   Give more verbose output regarding test execution. Use the option
	   twice to get even more output. Note that the output generated
	   within each test case is not affected.

       o   --verbose-restart

	   Write when and why servers are restarted between test cases.

       o   --view-protocol

	   Pass the --view-protocol option to mysqltest.

       o   --vs-config=config_val

	   Specify the configuration used to build MySQL (for example,
	   --vs-config=debug --vs-config=release). This option is for Windows
	   only.

       o   --wait-all

	   If --start or --start-dirty is used, wait for all servers to exit
	   before termination. Otherise, it will terminate if one (of several)
	   servers is restarted.

       o   --warnings

	   Search the server log for errors or warning after each test and
	   report any suspicious ones; if any are found, the test will be
	   marked as failed. This is the default behavior, it may be turned
	   off with --nowarnings.

       o   --with-ndbcluster-only

	   Run only test cases that have ndb in their name.

COPYRIGHT
       Copyright (C) 2006, 2015, Oracle and/or its affiliates. All rights
       reserved.

       This documentation is free software; you can redistribute it and/or
       modify it only under the terms of the GNU General Public License as
       published by the Free Software Foundation; version 2 of the License.

       This documentation is distributed in the hope that it will be useful,
       but WITHOUT ANY WARRANTY; without even the implied warranty of
       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
       General Public License for more details.

       You should have received a copy of the GNU General Public License along
       with the program; if not, write to the Free Software Foundation, Inc.,
       51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA or see
       http://www.gnu.org/licenses/.


SEE ALSO
       For more information, please refer to the MySQL Reference Manual, which
       may already be installed locally and which is also available online at
       http://dev.mysql.com/doc/.

AUTHOR
       Oracle Corporation (http://dev.mysql.com/).



							      MYSQL-TEST-RUN()
