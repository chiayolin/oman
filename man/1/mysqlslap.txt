MYSQLSLAP(1)		     MySQL Database System		  MYSQLSLAP(1)



NAME
       mysqlslap - load emulation client

SYNOPSIS
       mysqlslap [options]

DESCRIPTION
       mysqlslap is a diagnostic program designed to emulate client load for a
       MySQL server and to report the timing of each stage. It works as if
       multiple clients are accessing the server.

       Invoke mysqlslap like this:

	   shell> mysqlslap [options]

       Some options such as --create or --query enable you to specify a string
       containing an SQL statement or a file containing statements. If you
       specify a file, by default it must contain one statement per line.
       (That is, the implicit statement delimiter is the newline character.)
       Use the --delimiter option to specify a different delimiter, which
       enables you to specify statements that span multiple lines or place
       multiple statements on a single line. You cannot include comments in a
       file; mysqlslap does not understand them.

       mysqlslap runs in three stages:

	1. Create schema, table, and optionally any stored programs or data to
	   use for the test. This stage uses a single client connection.

	2. Run the load test. This stage can use many client connections.

	3. Clean up (disconnect, drop table if specified). This stage uses a
	   single client connection.

       Examples:

       Supply your own create and query SQL statements, with 50 clients
       querying and 200 selects for each (enter the command on a single line):

	   mysqlslap --delimiter=";"
	     --create="CREATE TABLE a (b int);INSERT INTO a VALUES (23)"
	     --query="SELECT * FROM a" --concurrency=50 --iterations=200

       Let mysqlslap build the query SQL statement with a table of two INT
       columns and three VARCHAR columns. Use five clients querying 20 times
       each. Do not create the table or insert the data (that is, use the
       previous test's schema and data):

	   mysqlslap --concurrency=5 --iterations=20
	     --number-int-cols=2 --number-char-cols=3
	     --auto-generate-sql

       Tell the program to load the create, insert, and query SQL statements
       from the specified files, where the create.sql file has multiple table
       creation statements delimited by ';' and multiple insert statements
       delimited by ';'. The --query file will have multiple queries delimited
       by ';'. Run all the load statements, then run all the queries in the
       query file with five clients (five times each):

	   mysqlslap --concurrency=5
	     --iterations=5 --query=query.sql --create=create.sql
	     --delimiter=";"

       mysqlslap supports the following options, which can be specified on the
       command line or in the [mysqlslap] and [client] groups of an option
       file. For information about option files used by MySQL programs, see
       Section 4.2.6, "Using Option Files".

       o   --help, -?

	   Display a help message and exit.

       o   --auto-generate-sql, -a

	   Generate SQL statements automatically when they are not supplied in
	   files or using command options.

       o   --auto-generate-sql-add-autoincrement

	   Add an AUTO_INCREMENT column to automatically generated tables.

       o   --auto-generate-sql-execute-number=N

	   Specify how many queries to generate automatically.

       o   --auto-generate-sql-guid-primary

	   Add a GUID-based primary key to automatically generated tables.

       o   --auto-generate-sql-load-type=type

	   Specify the test load type. The permissible values are read (scan
	   tables), write (insert into tables), key (read primary keys),
	   update (update primary keys), or mixed (half inserts, half scanning
	   selects). The default is mixed.

       o   --auto-generate-sql-secondary-indexes=N

	   Specify how many secondary indexes to add to automatically
	   generated tables. By default, none are added.

       o   --auto-generate-sql-unique-query-number=N

	   How many different queries to generate for automatic tests. For
	   example, if you run a key test that performs 1000 selects, you can
	   use this option with a value of 1000 to run 1000 unique queries, or
	   with a value of 50 to perform 50 different selects. The default is
	   10.

       o   --auto-generate-sql-unique-write-number=N

	   How many different queries to generate for
	   --auto-generate-sql-write-number. The default is 10.

       o   --auto-generate-sql-write-number=N

	   How many row inserts to perform on each thread. The default is 100.

       o   --commit=N

	   How many statements to execute before committing. The default is 0
	   (no commits are done).

       o   --compress, -C

	   Compress all information sent between the client and the server if
	   both support compression.

       o   --concurrency=N, -c N

	   The number of clients to simulate when issuing the SELECT
	   statement.

       o   --create=value

	   The file or string containing the statement to use for creating the
	   table.

       o   --create-schema=value

	   The schema in which to run the tests.

	       Note
	       If the --auto-generate-sql option is also given, mysqlslap
	       drops the schema at the end of the test run. To avoid this, use
	       the --no-drop option as well.

       o   --csv[=file_name]

	   Generate output in comma-separated values format. The output goes
	   to the named file, or to the standard output if no file is given.

       o   --debug[=debug_options], -# [debug_options]

	   Write a debugging log. A typical debug_options string is
	   d:t:o,file_name. The default is d:t:o,/tmp/mysqlslap.trace.

       o   --debug-check

	   Print some debugging information when the program exits.

       o   --debug-info, -T

	   Print debugging information and memory and CPU usage statistics
	   when the program exits.

       o   --default-auth=plugin

	   A hint about the client-side authentication plugin to use. See
	   Section 6.3.7, "Pluggable Authentication".

	   This option was added in MySQL 5.6.2.

       o   --defaults-extra-file=file_name

	   Read this option file after the global option file but (on Unix)
	   before the user option file. If the file does not exist or is
	   otherwise inaccessible, an error occurs.  file_name is interpreted
	   relative to the current directory if given as a relative path name
	   rather than a full path name.

       o   --defaults-file=file_name

	   Use only the given option file. If the file does not exist or is
	   otherwise inaccessible, an error occurs.  file_name is interpreted
	   relative to the current directory if given as a relative path name
	   rather than a full path name.

       o   --defaults-group-suffix=str

	   Read not only the usual option groups, but also groups with the
	   usual names and a suffix of str. For example, mysqlslap normally
	   reads the [client] and [mysqlslap] groups. If the
	   --defaults-group-suffix=_other option is given, mysqlslap also
	   reads the [client_other] and [mysqlslap_other] groups.

       o   --delimiter=str, -F str

	   The delimiter to use in SQL statements supplied in files or using
	   command options.

       o   --detach=N

	   Detach (close and reopen) each connection after each N statements.
	   The default is 0 (connections are not detached).

       o   --enable-cleartext-plugin

	   Enable the mysql_clear_password cleartext authentication plugin.
	   (See Section 6.3.8.7, "The Cleartext Client-Side Authentication
	   Plugin".) This option was added in MySQL 5.6.7.

       o   --engine=engine_name, -e engine_name

	   The storage engine to use for creating tables.

       o   --host=host_name, -h host_name

	   Connect to the MySQL server on the given host.

       o   --iterations=N, -i N

	   The number of times to run the tests.

       o   --login-path=name

	   Read options from the named login path in the .mylogin.cnf login
	   path file. A "login path" is an option group that permits only a
	   limited set of options: host, user, and password. Think of a login
	   path as a set of values that indicate the server host and the
	   credentials for authenticating with the server. To create the login
	   path file, use the mysql_config_editor utility. See
	   mysql_config_editor(1). This option was added in MySQL 5.6.6.

       o   --no-drop

	   Prevent mysqlslap from dropping any schema it creates during the
	   test run. This option was added in MySQL 5.6.3.

       o   --no-defaults

	   Do not read any option files. If program startup fails due to
	   reading unknown options from an option file, --no-defaults can be
	   used to prevent them from being read.

	   The exception is that the .mylogin.cnf file, if it exists, is read
	   in all cases. This permits passwords to be specified in a safer way
	   than on the command line even when --no-defaults is used.
	   (.mylogin.cnf is created by the mysql_config_editor utility. See
	   mysql_config_editor(1).)

       o   --number-char-cols=N, -x N

	   The number of VARCHAR columns to use if --auto-generate-sql is
	   specified.

       o   --number-int-cols=N, -y N

	   The number of INT columns to use if --auto-generate-sql is
	   specified.

       o   --number-of-queries=N

	   Limit each client to approximately this many queries. Query
	   counting takes into account the statement delimiter. For example,
	   if you invoke mysqlslap as follows, the ; delimiter is recognized
	   so that each instance of the query string counts as two queries. As
	   a result, 5 rows (not 10) are inserted.

	       shell> mysqlslap --delimiter=";" --number-of-queries=10
			--query="use test;insert into t values(null)"

       o   --only-print

	   Do not connect to databases.  mysqlslap only prints what it would
	   have done.

       o   --password[=password], -p[password]

	   The password to use when connecting to the server. If you use the
	   short option form (-p), you cannot have a space between the option
	   and the password. If you omit the password value following the
	   --password or -p option on the command line, mysqlslap prompts for
	   one.

	   Specifying a password on the command line should be considered
	   insecure. See Section 6.1.2.1, "End-User Guidelines for Password
	   Security". You can use an option file to avoid giving the password
	   on the command line.

       o   --pipe, -W

	   On Windows, connect to the server using a named pipe. This option
	   applies only if the server supports named-pipe connections.

       o   --plugin-dir=path

	   The directory in which to look for plugins. It may be necessary to
	   specify this option if the --default-auth option is used to specify
	   an authentication plugin but mysqlslap does not find it. See
	   Section 6.3.7, "Pluggable Authentication".

	   This option was added in MySQL 5.6.2.

       o   --port=port_num, -P port_num

	   The TCP/IP port number to use for the connection.

       o   --post-query=value

	   The file or string containing the statement to execute after the
	   tests have completed. This execution is not counted for timing
	   purposes.

       o   --post-system=str

	   The string to execute using system() after the tests have
	   completed. This execution is not counted for timing purposes.

       o   --pre-query=value

	   The file or string containing the statement to execute before
	   running the tests. This execution is not counted for timing
	   purposes.

       o   --pre-system=str

	   The string to execute using system() before running the tests. This
	   execution is not counted for timing purposes.

       o   --print-defaults

	   Print the program name and all options that it gets from option
	   files.

       o   --protocol={TCP|SOCKET|PIPE|MEMORY}

	   The connection protocol to use for connecting to the server. It is
	   useful when the other connection parameters normally would cause a
	   protocol to be used other than the one you want. For details on the
	   permissible values, see Section 4.2.2, "Connecting to the MySQL
	   Server".

       o   --query=value, -q value

	   The file or string containing the SELECT statement to use for
	   retrieving data.

       o   --secure-auth

	   Do not send passwords to the server in old (pre-4.1) format. This
	   prevents connections except for servers that use the newer password
	   format. This option is enabled by default; use --skip-secure-auth
	   to disable it. This option was added in MySQL 5.6.17.

	       Note
	       Passwords that use the pre-4.1 hashing method are less secure
	       than passwords that use the native password hashing method and
	       should be avoided. Pre-4.1 passwords are deprecated and support
	       for them will be removed in a future MySQL release. For account
	       upgrade instructions, see Section 6.3.8.3, "Migrating Away from
	       Pre-4.1 Password Hashing and the mysql_old_password Plugin".

       o   --shared-memory-base-name=name

	   On Windows, the shared-memory name to use, for connections made
	   using shared memory to a local server. This option applies only if
	   the server supports shared-memory connections.

       o   --silent, -s

	   Silent mode. No output.

       o   --socket=path, -S path

	   For connections to localhost, the Unix socket file to use, or, on
	   Windows, the name of the named pipe to use.

       o   --ssl*

	   Options that begin with --ssl specify whether to connect to the
	   server using SSL and indicate where to find SSL keys and
	   certificates. See Section 6.3.10.4, "SSL Command Options".

       o   --user=user_name, -u user_name

	   The MySQL user name to use when connecting to the server.

       o   --verbose, -v

	   Verbose mode. Print more information about what the program does.
	   This option can be used multiple times to increase the amount of
	   information.

       o   --version, -V

	   Display version information and exit.

COPYRIGHT
       Copyright (C) 1997, 2015, Oracle and/or its affiliates. All rights
       reserved.

       This documentation is free software; you can redistribute it and/or
       modify it only under the terms of the GNU General Public License as
       published by the Free Software Foundation; version 2 of the License.

       This documentation is distributed in the hope that it will be useful,
       but WITHOUT ANY WARRANTY; without even the implied warranty of
       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
       General Public License for more details.

       You should have received a copy of the GNU General Public License along
       with the program; if not, write to the Free Software Foundation, Inc.,
       51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA or see
       http://www.gnu.org/licenses/.


SEE ALSO
       For more information, please refer to the MySQL Reference Manual, which
       may already be installed locally and which is also available online at
       http://dev.mysql.com/doc/.

AUTHOR
       Oracle Corporation (http://dev.mysql.com/).



MySQL 5.6			  07/14/2015			  MYSQLSLAP(1)
