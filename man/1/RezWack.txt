
REZWACK(1)		  BSD General Commands Manual		    REZWACK(1)

NAME
     /usr/bin/RezWack -- Combines resource and data forks of a file into a
     flattened file. (DEPRECATED)

SYNOPSIS
     /usr/bin/RezWack -d dataFork [-do dataForkOffset] -r resFork
		      [-ro resForkOffset] -o outFileName [-f]

DESCRIPTION
     Tools supporting Carbon development, including /usr/bin/RezWack, were
     deprecated with Xcode 6.

     /usr/bin/RezWack takes the data fork of one input file, the resource fork
     of (possibly the same) file, and combines them into a single "flattened"
     data-fork file.  This file can then be transferred to file systems, file
     servers, or other protocols that do not handle Macintosh HFS resource
     forks.  QuickTime uses this format for "flattened" MooV (.moov or .mov)
     files.

     /usr/bin/RezWack takes the following flags and arguments:

     -d dataFork
	      Path to the file to use as the data fork of the resulting file.
	      This may be any data file.

     -do dataForkOffset
	      Offset from the beginning of the data file from which to start
	      reading the data.  Default is the beginning of the file.

     -r resFork
	      Path to the file from which to extract resource information.
	      This must be a data-fork resource file (see Notes, below).

     -ro resForkOffset
	      Offset from the beginning of the resource file from which to
	      start reading the resource data.	Default is the beginning of
	      the resource map (byte position 512); note that any other value
	      may result in a corrupted resource file when using UnRezWack(1).

     -o outFileName
	      Path to the output file to be created.  If the file exists and
	      the -f flag is not provided, RezWack will fail with error 2.

     -f       Force overwrite of existing output file.

NOTES
     The HFS and Extended HFS ("HFS+") file systems support two forks for each
     file in the file system.  Other file systems may not support multi-fork
     files, and standard POSIX file system calls do not have options to spec-
     ify which fork to read on a two-fork file.  To use RezWack properly, you
     must either have the resource data in a data-fork resource file, or
     access the named "rsrc" fork on an HFS or HFS+ volume.

     Note that on non-HFS volumes, or after using SplitForks(1), the resource
     data of a file is in a hidden file whose name begins with "._".  This is
     an AppleDouble file that contains the resource data, but it is not a
     resource file and cannot be used with /usr/bin/RezWack or other tools
     that expect a data-fork resource file (such as DeRez(1) ).

     To create the resource data in the data fork, use the -useDF flag to
     Rez(1).  When the resource data is in the data fork of a file, you can
     use the path to the file as the -r argument regardless of the file sys-
     tem.

     If the resource data is in the resource fork of a file on a HFS or HFS
     Extended file system, you can access the resource data using a named fork
     (for example, the resource fork of ~/foo.txt is
     ~/foo.txt/..namedfork/rsrc).

EXAMPLES
	   /Developer/Tools/RezWack -d ~/foo -r ~/foo/..namedfork/rsrc -o ~/foo.wak
	   /Developer/Tools/RezWack -d ~/foo.txt -r ~/bar.rsrc -o ~/baz.wak

SEE ALSO
     Rez(1), DeRez(1), UnRezWack(1)

Mac OS X			April 12, 2004			      Mac OS X
